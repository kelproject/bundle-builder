set +e
PYTHON_VERSION=$(cat runtime.txt)

# Install Python.
if [ -f .kel/python-version ]; then
  if [ ! $(cat .kel/python-version) = $PYTHON_VERSION ]; then
    bpwatch start uninstall_python
      puts-step "Found runtime $(cat .kel/python-version), removing"
      rm -fr .kel/python
    bpwatch stop uninstall_python
  else
    SKIP_INSTALL=1
  fi
fi

if [ ! $STACK = $CACHED_PYTHON_STACK ]; then
  bpwatch start uninstall_python
    rm -fr .kel/python .kel/python-stack .kel/vendor
    unset SKIP_INSTALL
  bpwatch stop uninstall_python
fi


if [ ! "$SKIP_INSTALL" ]; then
  bpwatch start install_python
    puts-step "Installing runtime ($PYTHON_VERSION)"

    # Prepare destination directory.
    mkdir -p .kel/python

    curl https://storage.googleapis.com/buildpack-artifacts/$STACK/python/runtimes/$PYTHON_VERSION.tar.gz -s | tar zxv -C .kel/python &> /dev/null
    if [[ $? != 0 ]] ; then
      puts-warn "Requested runtime ($PYTHON_VERSION) is not available for this stack ($STACK)."
      puts-warn "Aborting."
      exit 1
    fi

  bpwatch stop install_python

  # Record for future reference.
  echo $PYTHON_VERSION > .kel/python-version
  echo $STACK > .kel/python-stack
  FRESH_PYTHON=true

  hash -r
fi

# If Pip isn't up to date:
if [ "$FRESH_PYTHON" ] || [[ ! $(pip --version) == *$PIP_VERSION* ]]; then
  WORKING_DIR=$(pwd)

  bpwatch start prepare_environment

  TMPTARDIR=$(mktemp -d)
  trap "rm -rf $TMPTARDIR" RETURN

  bpwatch start install_setuptools
    # Prepare it for the real world
    # puts-step "Installing Setuptools ($SETUPTOOLS_VERSION)"
    tar zxf $ROOT_DIR/vendor/setuptools-$SETUPTOOLS_VERSION.tar.gz -C $TMPTARDIR
    cd $TMPTARDIR/setuptools-$SETUPTOOLS_VERSION/
    python setup.py install &> /dev/null
    cd $WORKING_DIR
  bpwatch stop install_setuptoools

  bpwatch start install_pip
    # puts-step "Installing Pip ($PIP_VERSION)"
    tar zxf $ROOT_DIR/vendor/pip-$PIP_VERSION.tar.gz -C $TMPTARDIR
    cd $TMPTARDIR/pip-$PIP_VERSION/
    python setup.py install &> /dev/null
    cd $WORKING_DIR

  bpwatch stop install_pip
  bpwatch stop prepare_environment
fi

set -e
hash -r
